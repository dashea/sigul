# Copyright (C) 2017 Red Hat, Inc.  All rights reserved.
#
# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program; if
# not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
# Floor, Boston, MA 02110-1301, USA.  Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.
#
# Red Hat Author: Patrick Uiterwijk <puiterwijk@redhat.com>

mkdir ca client bridge server gnupg rpm
chmod 700 gnupg

AT_DATA([nss_password_file], [[nss-pw
]])
AT_DATA([pkcs12_password_file], [[pk12-pw
]])

# Set up a CA and create all certificates
AT_CHECK([certutil -d ca -N -f nss_password_file])
# Specify serial number (-m) explicitly because it is time-based by default,
# and creating certificates quickly can result in a collision.
AT_CHECK([certutil -d ca -S -f nss_password_file -z /dev/null -n my-ca \
		-s 'CN=My CA' -t CT,, -x -v 120 -m 1], , , [ignore])
AT_CHECK([certutil -d ca -L -n my-ca -a > ca.pem])
AT_CHECK([certutil -d ca -S -f nss_password_file -z /dev/null \
		-n sigul-bridge-cert -s 'CN=localhost,OU=bridge' -c my-ca \
		-t u,, -v 120 -m 2], , , [ignore])
AT_CHECK([pk12util -d ca -o bridge.p12 -n sigul-bridge-cert \
		-k nss_password_file -w pkcs12_password_file], , [ignore])
AT_CHECK([certutil -d ca -S -f nss_password_file -z /dev/null \
		-n sigul-server-cert -s 'CN=localhost,OU=server' -c my-ca \
		-t u,, -v 120 -m 3], , , [ignore])
AT_CHECK([pk12util -d ca -o server.p12 -n sigul-server-cert \
		-k nss_password_file -w pkcs12_password_file], , [ignore])
AT_CHECK([certutil -d ca -S -f nss_password_file -z /dev/null \
		-n sigul-client-cert -s 'CN=root' -c my-ca -t u,, -v 120 -m 4],
	 , , [ignore])
AT_CHECK([pk12util -d ca -o client.p12 -n sigul-client-cert \
		-k nss_password_file -w pkcs12_password_file], , [ignore])


# Set up bridge:
AT_CHECK([certutil -d bridge -N -f nss_password_file])
AT_CHECK([certutil -d bridge -A -f nss_password_file -n my-ca -t CT,, -a -i ca.pem])
AT_CHECK([pk12util -d bridge -i bridge.p12 -k nss_password_file \
		-w pkcs12_password_file], , [ignore])
rm bridge.p12

[cat > bridge/bridge.conf <<EOF
[bridge]
required-fas-group:
[daemon]
unix-user:
unix-group:
[nss]
nss-dir: $(pwd)/bridge
nss-password: nss-pw
EOF]


# Set up server:
AT_CHECK([certutil -d server -N -f nss_password_file])
AT_CHECK([certutil -d server -A -f nss_password_file -n my-ca -t CT,, -a -i ca.pem])
AT_CHECK([pk12util -d server -i server.p12 -k nss_password_file \
		-w pkcs12_password_file], , [ignore])
rm server.p12

[cat > server/server.conf <<EOF
[server]
bridge-hostname: localhost
# This check is lenient here since we try different usernames
lenient-username-check: yes
[database]
database-path: $(pwd)/server/server.sqlite
[gnupg]
gnupg-home: $(pwd)/server/gnupg
gnupg-key-type: RSA
gnupg-key-usage: sign
# This is too small for normal use, but for a test suite its okay
gnupg-key-length: 1024
gnupg-subkey-length: 1024
[keys]
keys-storage: $(pwd)/server/keys
[daemon]
unix-user:
unix-group:
[nss]
nss-dir: $(pwd)/server
nss-password: wrong-nss-pw
EOF]
mkdir server/keys

AT_CHECK([sigul_server_create_db -c server/server.conf -v -v])
AT_CHECK([printf 'rootroot\0' | \
		sigul_server_add_admin -c server/server.conf --batch -v -v \
		-n root], 1, ,
[Provided NSS password is incorrect
])

sed -e 's/wrong-nss-pw/nss-pw/' -i server/server.conf

AT_CHECK([printf 'rootroot\0' | \
		sigul_server_add_admin -c server/server.conf --batch -v -v \
		-n root])


# Set up client
AT_CHECK([certutil -d client -N -f nss_password_file])
AT_CHECK([certutil -d client -A -f nss_password_file -n my-ca -t CT,, -a -i ca.pem])
AT_CHECK([pk12util -d client -i client.p12 -k nss_password_file \
		-w pkcs12_password_file], , [ignore])
rm client.p12

[cat > client/client.conf <<EOF
[client]
bridge-hostname: localhost
server-hostname: localhost
user-name: root
[nss]
nss-dir: $(pwd)/client
nss-password: nss-pw
EOF]
