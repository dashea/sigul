# Copyright (C) 2016 Red Hat, Inc.  All rights reserved.
#
# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program; if
# not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
# Floor, Boston, MA 02110-1301, USA.  Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.
#
# Red Hat Author: Patrick Uiterwijk <puiterwijk@redhat.com>

AT_SETUP([Bound passphrases check])

m4_include([include_setup.at])
[cat >> server/server.conf <<EOF
[binding]
enabled: test
default-binding-methods: test,may_unbind=0
EOF]
[cat >> client/client.conf <<EOF
[binding]
enabled: test
forced-binding-methods-position: last
forced-binding-methods: test,may_unbind=1
	test,may_unbind=1|test,may_unbind=0
EOF]
m4_include([include_start.at])
m4_include([include_importedkey.at])


AT_CHECK([printf 'rootroot\0pass1\0' | \
		sigul -c client/client.conf --batch -v -v \
		new-user user1])
AT_CHECK([printf 'rootroot\0pass2\0' | \
		sigul -c client/client.conf --batch -v -v \
		new-user user2])
AT_CHECK([printf 'rootroot\0pass3\0' | \
		sigul -c client/client.conf --batch -v -v \
		new-user user3])
AT_CHECK([printf 'rootroot\0pass4\0' | \
		sigul -c client/client.conf --batch -v -v \
		new-user user4])
AT_CHECK([printf 'rootroot\0pass5\0' | \
		sigul -c client/client.conf --batch -v -v \
		new-user user5])

# Test list-binding
AT_CHECK([printf 'rootroot\0' | \
		sigul -c client/client.conf --batch -v -v \
		list-binding-methods], ,
[test
])
AT_CHECK([printf 'rootroot\0' | \
		sigul -c client/client.conf --batch -v -v \
		list-server-binding-methods], ,
[test
])

# Test adding a bound passphrase
AT_CHECK([printf 'imported-key-pw\0' | \
		sigul -c client/client.conf --batch -v -v \
		grant-key-access imported-key user1 \
        -c test,may_unbind=1 -b test,may_unbind=1 -w passphrase1.dat])
AT_CHECK([printf 'imported-key-pw\0' | \
		sigul -c client/client.conf --batch -v -v \
		grant-key-access imported-key user2 \
        -c test,may_unbind=0 -b test,may_unbind=1 -w passphrase2.dat])
AT_CHECK([printf 'imported-key-pw\0' | \
		sigul -c client/client.conf --batch \
		grant-key-access imported-key user3 \
        -c test,may_unbind=1 -b test,may_unbind=0 -w passphrase3.dat])
AT_CHECK([printf 'imported-key-pw\0' | \
		sigul -c client/client.conf --batch \
		grant-key-access imported-key user4 \
        -c test,may_unbind=1 -b 'test,may_unbind=0|test,may_unbind=1' -w passphrase4.dat])
AT_CHECK([printf 'imported-key-pw\0' | \
		sigul -c client/client.conf --batch \
		grant-key-access imported-key user5 \
        -c test,may_unbind=1 -w passphrase5.dat])
AT_CHECK([printf 'imported-key-pw\0' | \
		sigul -c client/client.conf --batch -v -v \
		list-key-users imported-key], ,
[root
user1
user2
user3
user4
user5
])

# Test using an unbindable passphrase
AT_DATA([data], [[abracadabra
]])
AT_CHECK([sigul -c client/client.conf --batch -v -v \
		-u user1 -f passphrase1.dat sign-text -o data.asc \
        imported-key data])
AT_CHECK([gpg -q --homedir gnupg --verify data.asc], , , [ignore])
rm data.asc

# Test using a client-side non-unbindable passphrase
AT_CHECK([sigul -c client/client.conf --batch -v -v \
		-u user2 -f passphrase2.dat sign-text -o data.asc \
        imported-key data], 1, ,
[WARNING: Failed to unbind with any of the following: method: test, args: {'may_unbind': '0'}
Unable to unbind the passphrase on the client
])

# Make sure that whatever was specified in the request, there's also
# may_unbind 1 and may_unbind 0 entries at top level
# This comes from forced-binding-methods
AT_CHECK([cat passphrase2.dat | grep '"may_unbind": "1"'], 0, [ignore], [])
AT_CHECK([cat passphrase2.dat | grep '"may_unbind": "0"'], 0, [ignore], [])

# Test using a server-side non-unbindable passphrase
AT_CHECK([sigul -c client/client.conf --batch \
		-u user3 -f passphrase3.dat sign-text -o data.asc \
        imported-key data], 1, ,
[Error: Authentication failed
])

# Test using an Either-Or unbindable passphrase
AT_DATA([data], [[abracadabra
]])
AT_CHECK([sigul -c client/client.conf --batch -v -v \
		-u user1 -f passphrase1.dat sign-text -o data.asc \
        imported-key data])
AT_CHECK([gpg -q --homedir gnupg --verify data.asc], , , [ignore])
rm data.asc

# Test using a server-side defaulted non-unbindable passphrase
AT_CHECK([sigul -c client/client.conf --batch \
		-u user5 -f passphrase5.dat sign-text -o data.asc \
        imported-key data], 1, ,
[Error: Authentication failed
])

AT_CLEANUP
